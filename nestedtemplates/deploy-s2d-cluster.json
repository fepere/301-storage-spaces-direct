{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 15,
      "metadata": {
        "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
      }
    },
    "nicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
      }
    },
    "asgNameUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing ASG to which VM NICs should be attached"
      }
    },
    "joinIntoDomain": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
          "no",
          "yes"
        ],
      "metadata": {"description": "Does this VM needs to join an AD Domain? (yes/no)"}
    },
    "domainToJoin": {
      "type": "string",
      "defaultValue": "next.loc",
      "metadata": {"description": "The FQDN of the AD domain"}
    },
    "domainUsername": {
      "type": "string",
      "defaultValue": "s_sdc1_AZURE",
      "metadata": {"description": "Username of the account on the domain"}
    },
    "domainPassword": {
      "type": "securestring",
      "defaultValue": "**************",
      "metadata": {"description": "Password of the account on the domain"}
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "OU=Resources;OU=AzureVM ARM;OU=Transverse services;DC=next;DC=loc",
      "metadata": {"description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"}
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the S2D VMs to be created"
      }
    },
    "vmCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 3,
      "metadata": {
        "description": "Number of S2D VMs to be created in cluster (Min=2, Max=3)"
      }
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 64,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      }
    },
    "sofsName": {
      "type": "string",
      "metadata": {
        "description": "Name of clustered Scale-Out File Server role"
      }
    },
    "shareName": {
      "type": "string",
      "metadata": {
        "description": "Name of shared data folder on clustered Scale-Out File Server role"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter"
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "apiVersionStorage": "2016-01-01",
    "storageNamePrefix": "[concat('sdc35608',uniqueString(resourceGroup().id),'vm')]",
    "witnessStorageName": "[concat('sdc35608',uniqueString(resourceGroup().id),'012')]",
    "witnessStorageType": "Standard_LRS",
    "vmNamePrefix": "[concat(parameters('namePrefix'))]",
    "vmAvailabilitySetName": "[concat('sdc305608w002-avst')]",
    "clusterName": "[concat('clsdc305608w001')]",
    "vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/newVM.json',parameters('_artifactsLocationSasToken'))]",
    "s2dPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",
    "s2dConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('vmAvailabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
       },
       "sku": {
        "name": "Aligned"
       }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('witnessStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('witnessStorageType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageNamePrefix'),copyindex(1))]",
      "apiVersion": "2016-01-01",
      "copy": {
        "name": "storageAccountLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "name": "[concat(variables('vmNamePrefix'), copyindex(1), '-vnic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2017-09-01",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[parameters('nicSubnetUri')]" },
              "applicationSecurityGroups": [ { "id": "[parameters('asgNameUri')]" } ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmNamePrefix'),copyindex(1),'-newVM')]",
      "dependsOn": [
        "storageAccountLoop",
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmLoopTemplateURL')]"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(variables('vmNamePrefix'), copyindex(1))]"
          },
          "storageAccountUri": {
            "value": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('StorageNamePrefix'),copyIndex(1)),variables('apiVersionStorage')).primaryEndpoints.blob]"
          },
          "vmAvailabilitySetName": {
            "value": "[variables('vmAvailabilitySetName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('joinIntoDomain'),'yes')]",
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),'2/JoinDomain')]",
      "location": "[parameters('Location')]",
      "dependsOn": ["virtualMachineLoop"],
      "properties": 
          {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings":
              {
              "Name": "[parameters('domainToJoin')]",
              "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
              "OUPath": "[parameters('ouPath')]",
              "Restart": "true",
              "Options": "3"
              },
          "protectedsettings": {"Password": "[parameters('domainPassword')]"}
          }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),copyindex(2),'/s2dPrep')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "copy": {
        "name": "virtualMachineExtensionLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('s2dPrepModulesURL')]",
          "configurationFunction": "[variables('s2dPrepFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "adminCreds": {
              "userName": "[parameters('adminUsername')]",
              "password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('joinIntoDomain'),'yes')]",
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),'1/JoinDomain')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "virtualMachineLoop",
        "virtualMachineExtensionLoop",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"
      ],
      "properties": 
          {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings":
              {
              "Name": "[parameters('domainToJoin')]",
              "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
              "OUPath": "[parameters('ouPath')]",
              "Restart": "true",
              "Options": "3"
              },
          "protectedsettings": {"Password": "[parameters('domainPassword')]"}
          }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),'1/s2dConfig')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop",
        "virtualMachineExtensionLoop",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('s2dConfigModulesURL')]",
          "configurationFunction": "[variables('s2dConfigFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "clusterName": "[variables('clusterName')]",
            "sofsName": "[parameters('sofsName')]",
            "shareName": "[parameters('shareName')]",
            "vmNamePrefix": "[variables('vmNamePrefix')]",
            "vmCount": "[parameters('vmCount')]",
            "vmDiskSize": "[parameters('vmDiskSize')]",
            "witnessStorageName": "[variables('witnessStorageName')]",
            "witnessStorageEndpoint": "[replace(split(reference(concat('Microsoft.Storage/storageAccounts/', variables('witnessStorageName'))).primaryEndpoints.blob, 'blob.')[1], '/', '')]",
            "witnessStorageKey": {
              "userName": "PLACEHOLDER-DO-NOT-USE",
              "password": "PrivateSettingsRef:witnessStorageKey"
            },
            "adminCreds": {
              "userName": "[parameters('adminUsername')]",
              "password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')),variables('apiVersionStorage')).keys[0].value]"
          }
        }
      }
    }
  ],
  "outputs": {
    "sofsName": {
      "type": "string",
      "value": "[parameters('sofsName')]"
    },
    "shareName": {
      "type": "string",
      "value": "[parameters('shareName')]"
    }
  }
}
